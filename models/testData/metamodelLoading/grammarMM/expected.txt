class "Symbol" {
  "Symbol.productions" : [val("Expression")+]
}
abstract class "Expression" {
}
class "SymbolReference" : "Expression" {
  "SymbolReference.symbol" : ref("Symbol")
}
class "Empty" : "Expression" {
}
class "Literal" : "Expression" {
  "Literal.data" : String
}
class "CharacterRange" : "Expression" {
  "CharacterRange.from" : Character
  "CharacterRange.to" : Character
}
class "Sequence" : "Expression" {
  "Sequence.expressions" : [val("Expression")+]
}
class "Alternative" : "Expression" {
  "Alternative.expressions" : {val("Expression")+}
}
class "Iteration" : "Expression" {
  "Iteration.expression" : val("Expression")
  "Iteration.kind" : enum "IterationKind"
}
enum "IterationKind" {
  "ONE",
  "ONE_OR_MORE",
  "ZERO_OR_ONE",
  "ZERO_OR_MORE"
}